name: Publish Python package
on:
  workflow_run:
    workflows: [ "Py-Build" ]
    branches: [ master ]
    types:
      - completed
  release:
    types: [published]
#on:
#  push:
#    tags:
#      - "v*.*.*"
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          installation-arguments: "--git https://github.com/python-poetry/poetry.git@6659a22e2a03ad13bae142b66c7c31aea68dd114"

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: "venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}"

      - name: Update poetry
        run: |
          poetry plugin add poetry-dynamic-versioning
      #          poetry self update
      #          ~/.local/share/pypoetry/venv/bin/pip install poetry-dynamic-versioning
#          pip install poetry-dynamic-versioning

      - name: Build
        run: |
          poetry build
#          python -m pip install --upgrade pip
#          pip install flake8 pytest
#          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#      - name: Build and publish to pypi
#        uses: JRubics/poetry-publish@v1.10
#        with:
#          pypi_token: ${{ secrets.TEST_PYPI_TOKEN }}
#          repository_name: "testpypi"
#          repository_url: "https://test.pypi.org/legacy/"